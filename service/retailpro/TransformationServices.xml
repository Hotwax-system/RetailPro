<?xml version="1.0" encoding="UTF-8"?>
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.xsd">
    <service verb="get" noun="OrderFeedToManualApi">
        <in-parameters>
            <parameter name="orderMap"/>
        </in-parameters>
        <out-parameters>
            <parameter name="manualApiPayLoad"/>
<!--            <parameter name="groupedList"/>-->
            <parameter name="solrpayload"/>
        </out-parameters>
        <actions>
         <script>

             import groovy.json.JsonSlurper

             def data = new JsonSlurper().parseText(context.orderMap)
             context.orderMap = data
             data.shipmentItems.each {
             def valueAppend = ''
             if (it.productStoreId == "STORE") {
             valueAppend = 'A'
             } else if (it.productStoreId == "CAT_STORE") {
             valueAppend = 'C'
             } else if (it.productStoreId == "TNF_STORE") {
             valueAppend = 'T'
             } else if (it.productStoreId == "HP_STORE") {
             valueAppend = 'H'
             } else if (it.productStoreId == "PAR2_STORE") {
             valueAppend = 'P'
             }

             if (it.shipmentId.startsWith("M")) {
             it.shipmentId = valueAppend + it.shipmentId.substring(1)
             } else {
             it.shipmentId = valueAppend + it.shipmentId
             }
             }

             def groupedList = data.shipmentItems
             .groupBy { it.shipmentId }
             .values()
             .toList()
             context.groupedList = groupedList

         </script>
            <set field="manualApiPayLoad" from="[]"/>
            <iterate list="groupedList" entry="shipmentList">
                <set field="totalItemQuantity" value="0" type="Integer"/>
                <set field="Items" from="[]"/>
                <set field="ToStore" value=""/>

                <iterate list="shipmentList" entry="shipment">
                    <set field="totalItemQuantity" from="totalItemQuantity+ shipment.itemQuantity"/>
                    <iterate list="shipment.goodIdentifications" entry="goodIdentification">
                        <if condition="goodIdentification.goodIdentificationTypeId == 'UPCA'">
                            <set field="ItemMap" from="[
                                UPC : goodIdentification.idValue,
                                Qty : shipment.itemQuantity
                            ]"/>
                            <set field="Items" from="Items + ItemMap"/>
                        </if>
                    </iterate>
                </iterate>

                <set field="shipment" from="[
                        SlipNo : shipmentList[0].shipmentId,
                        OrderId : shipmentList[0].orderId,
                        FromStore : shipmentList[0].facilityExternalId,
                        CreatedDate : shipmentList[0].orderDate,
                        TotalQty : totalItemQuantity
                    ]"/>

                <set field="ToStore" value="" type="String"/>
                <if condition="orderMap.salesChannel == 'POS_SALES_CHANNEL' ">
                <if condition="context.orderMap.orderAttributes != null">
                    <iterate list="orderMap.orderAttributes" entry="orderAttribute">
                      <if condition="orderAttribute.attrName == 'orderFacility'">
                          <set field="ToStore" from="orderAttribute.attrValue"/>
                          <set field="shipment.ToStore" from="ToStore"/>
                      </if>
                    </iterate>
                </if>
                    <else>
                        <set field="shipment.ToStore" from="shipmentList[0].facilityExternalId" />
                    </else>
                </if>

                <if condition="Items.size() > 0">
                    <set field="shipment.Items" from="Items"/>
                </if>
                    <set field="manualApiPayLoad" from="manualApiPayLoad + shipment"/>

                <log message="${shipment}"/>

                <service-call name="retailpro.ExternalApiCall.get#ManualApiCall" in-map="[payload:shipment]" out-map="response"/>
                <if condition="response.statusCode == 200">
                    <log message="order successfull"/>
                    <else>
                        <set field="coreName" value="logInsights"/>
                        <log message="Solr order indexing"/>
                        <set field="request_txt_en" from="response.shipment"/>
                        <set field="primaryField_txt_en" value="OrderId"/>
                        <set field="primaryEntity_txt_en" value="OrderHeader"/>
                        <set field="_ttl_" value="+60DAYS"/>
                        <set field="comment" value="Manual Slip API Logs for all brands of ADOC SV"/>
                        <set field="docType" value="MANUAL_SLIP_API"/>
                        <set field="id" from="shipment.OrderId"/>

                        <if condition="response?.header?.invokehttp?.java?.exception?.class">
                            <set field="response_txt_en" from="response.header.invokehttp.java.exception.message"/>
                            <set field="statusCode_txt_en" value="408"/>
                            <set field="status_txt_en" value="failed"/>
                            <else>
                                <set field="response_txt_en" from="response.message"/>
                                <set field="statusCode_txt_en" value="200"/>
                                <set field="status_txt_en" value="success"/>
                            </else>
                        </if>
                        <set field="data" from="[
                            docType : docType,
                            _ttl_ : _ttl_,
                            id : id,
                            status_txt_en : status_txt_en,
                            request_txt_en : request_txt_en,
                            statusCode_txt_en : statusCode_txt_en,
                            response_txt_en : response_txt_en,
                            primaryEntity_txt_en : primaryEntity_txt_en,
                            primaryField_txt_en : primaryField_txt_en,
                            comment : comment,
                            createdDate : response.createdDate]"/>
                        <set field="solrpayload" from="[
                            coreName : coreName,
                            data : [data]
                        ]"/>
                        <service-call name="retailpro.ExternalApiCall.post#SolrOrderIndex" in-map="[orderPayload : solrpayload]"/>
                    </else>
                </if>
            </iterate>
            
            <iterate list="manualApiPayLoad" entry="payload">
                <log message="${payload}"/>
                <log message="here we are"/>
            </iterate>
        </actions>
    </service>


    <!-- Service to prepare payload to order to invoice api call -->
    <service verb="get" noun="OrderFeedToInvoice">
        <in-parameters>
            <parameter name="orderMap"/>
        </in-parameters>
        <out-parameters>
            <parameter name="finalInvoice"/>
            <parameter name="solrpayload"/>
<!--            <parameter name="groupedList"/>-->
        </out-parameters>

        <actions>
            <script>
                import groovy.json.JsonSlurper

                def data = new JsonSlurper().parseText(context.orderMap)

                def billingName = data.billTo.toName?.split(" ", 2)
                context.billingFirstName = billingName ? billingName[0] : data.billTo.toName
                context.billingLastName = billingName?.size() > 1 ? billingName[1] : ""

                context.orderMap = data

                def groupedList = data.shipmentItems
                .groupBy { it.shipmentId }
                .values()
                .toList()
                context.groupedList = groupedList

            </script>
            <set field="InvoicingStore" value=""/>
            <set field="finalInvoice" from="[]"/>
            <set field="ShippingAmt" value="0" type="Integer"/>
            <set field="noDocument" value="" type="String"/>
            <set field="EmployeeCode" value="" type="String"/>
            <set field="FiscalCredit" value="" type="String"/>
            <set field="CompanyId" value="" type="String"/>
            <set field="CompanyName" value="" type="String"/>
            <set field="CompanyAddress" value="" type="String"/>
            <set field="TypeDocument" value="" type="String"/>
            
            
            <iterate list="orderMap.orderAttributes" entry="orderAttribute">

                <if condition="orderAttribute.attrName == 'customerId'">
                    <set field="noDocument" from="orderAttribute.attrValue"/>
                </if>

                <if condition="orderAttribute.attrName == 'employeeId'">
                    <set field="EmployeeCode" from="orderAttribute.attrValue"/>
                </if>

                <if condition="orderAttribute.attrName == 'taxCredit'">
                    <set field="FiscalCredit" from="orderAttribute.attrValue"/>
                </if>

                <if condition="orderAttribute.attrName == 'taxIdentificationNumber'">
                    <set field="CompanyId" from="orderAttribute.attrValue"/>
                </if>

                <if condition="orderAttribute.attrName == 'companyName'">
                    <set field="CompanyName" from="orderAttribute.attrValue"/>
                </if>

                <if condition="orderAttribute.attrName == 'companyAddress'">
                    <set field="CompanyAddress" from="orderAttribute.attrValue"/>
                </if>

                <if condition="orderAttribute.attrName == 'identificationType'">
                    <set field="TypeDocument" from="orderAttribute.attrValue"/>
                </if>

            </iterate>
            
            <if condition="orderMap.orderAdjustments != null">
            <iterate list="orderMap.orderAdjustments" entry="orderAdjustment">
                <if condition="orderAdjustment.orderAdjustmentTypeId == 'SHIPPING_CHARGES' || orderAdjustment.orderAdjustmentTypeId == 'EXT_SHIP_ADJUSTMENT' || orderAdjustment.orderAdjustmentTypeId == 'SHIPPING_SALES_TAX' ">
                    <set field="ShippingAmt" from="ShippingAmt + orderAdjustment.amount"/>
                </if>
            </iterate>
            </if>
            
            <iterate list="groupedList" entry="ShipmentList">
                <set field="price" value="0" type="Integer"/>
                <set field="items" from="[]"/>
                <iterate list="ShipmentList" entry="shipmentItems">
                    <set field="itemDiscountAmount" value="0" type="Integer"/>
                    <set field="itemSalesTax" value="0" type="Integer"/>
                    
                    <!-- Item UPCA -->
                    <iterate list="shipmentItems.goodIdentifications" entry="goodIdentification">
                        <set field="UPC" value="" type="String"/>
                        <if condition="goodIdentification.goodIdentificationTypeId == 'UPCA'">
                            <set field="UPC" from="goodIdentification.idValue" />
                        </if>
                    </iterate>

                    <if condition="shipmentItems.orderItemAdjustments != null">
                    <iterate list="shipmentItems.orderItemAdjustments" entry="orderItemAdjustments">
                            <set field="itemDiscount" value="0"/>
                            <iterate list="shipmentItems.orderItemAdjustments" entry="orderItemAdjustment">
                                <if condition="orderItemAdjustment.orderAdjustmentTypeId == 'EXT_PROMO_ADJUSTMENT'">
                                    <set field="itemDiscount" from="orderItemAdjustment.amount"/>
                                </if>

                                <set field="price" from="shipmentItems.unitPrice+itemDiscount"/>
                                <if condition="orderItemAdjustments.orderAdjustmentTypeId == 'EXT_PROMO_ADJUSTMENT'">
                                    <set field="itemDiscountAmount" from="(itemDiscountAmount + orderItemAdjustments.amount)*(-1)"/>
                                </if>
                                <if condition="orderItemAdjustments.orderAdjustmentTypeId == 'SALES_TAX'">
                                    <set field="itemSalesTax" from="itemSalesTax + orderItemAdjustments.amount"/>
                                </if>
                                
                            </iterate>
                    </iterate>
                        <else>
                            <set field="price" from="shipmentItems.unitPrice+price"/>
                        </else>
                </if>

                    <set field="InvoicingStore" from="ShipmentList[0].facilityExternalId"/>
                    <if condition="ShipmentList[0].shipmentMethodTypeId == 'STOREPICKUP'">
                        <set field="DeliveryType" value="1" type="Integer"/>
                        <else>
                            <set field="DeliveryType" value="2" type="Integer"/>
                        </else>
                    </if>
                    <if condition="orderMap.payments[0].paymentMethodTypeId == 'EXT_SHOP_CASH_ON_DEL'">
                        <set field="PaymentType" value="2" type="Integer"/>
                        <else>
                            <set field="PaymentType" value="1" type="Integer"/>
                        </else>
                    </if>
                        <set field="TotalDiscAmt" value="0" type="Integer"/>

                        <set field="itemMap" from="[
                            UPC : UPC,
                            OrigPrice : shipmentItems.unitPrice,
                            OrigTax : itemSalesTax,
                            Price : price,
                            Tax : itemSalesTax,
                            Qty : shipmentItems.itemQuantity,
                            StoreOrig : shipmentItems.facilityExternalId,
                            StoreDest : shipmentItems.facilityExternalId
                        ]"/>
                        <set field="items" from="items+itemMap"/>
                </iterate>

                <set field="CustomerShipping" from="[
                    FirstName : ShipmentList[0].shipTo.toName,
                    LastName : 'Demo',
                    Email : ShipmentList[0].shipTo.email,
                    Address1 : ShipmentList[0].shipTo.address1,
                    Address2 : ShipmentList[0].shipTo.address2,
                    City : ShipmentList[0].shipTo.city,
                    Country : ShipmentList[0].shipTo.countryGeoCode,
                    NoDocument : noDocument,
                    TypeDocument : TypeDocument,
                    Phone : ShipmentList[0].shipTo.phone.contactNumber
                ]"/>
                
                <set field="CustomerBilling" from="[
                FirstName : billingFirstName,
                LastName : billingLastName,
                Email : orderMap.billTo.email,
                Address1 : orderMap.billTo.address1,
                Address2 : orderMap.billTo.address2,
                City : orderMap.billTo.city,
                Country : orderMap.billTo.countryGeoCode,
                NoDocument : noDocument,
                TypeDocument : TypeDocument,
                Phone : orderMap.billTo.phone.contactNumber
                ]"/>


                <set field="finalInvoiceMap" from="[
                InvoicingStore : InvoicingStore,
                OrderNo : orderMap.orderName,
                OrderId : orderMap.orderExternalId,
                CreatedDate : orderMap.orderDate,
                DeliveryType : DeliveryType,
                PaymentType : PaymentType,
                TotalAmt : orderMap.grandTotal,
                TotalDiscAmt : itemDiscountAmount,
                ShippingAmt : ShippingAmt,
                EmployeeCode : EmployeeCode,
                FiscalCredit : FiscalCredit,
                CompanyId : CompanyId,
                CompanyName : CompanyName,
                CompanyAddress : CompanyAddress,
                CustomerBilling : CustomerBilling,
                CustomerShipping : CustomerShipping,
                Items : items
                ]"/>
                <set field="finalInvoice" from="finalInvoice + finalInvoiceMap"/>

                <service-call name="retailpro.ExternalApiCall.get#InvoiceApiCall" in-map="[payload : finalInvoiceMap]" out-map="response"/>

                <if condition="response.statusCode == 200">
                    <log message="Order Successfull"/>

                    <else>
                        <log message="solr order indexing"/>
                        <set field="coreName" value="logInsights"/>
                        <set field="request_txt_en" from="response.shipment"/>
                        <set field="primaryField_txt_en" value="OrderNo"/>
                        <set field="primaryEntity_txt_en" value="OrderHeader"/>
                        <set field="_ttl_" value="+60DAYS"/>
                        <set field="comment" value="Order To Invoice Logs for all brands of ADOC SV"/>
                        <set field="docType" value="ORDER_TO_INVOICE_API"/>
                        <set field="id" from="finalInvoiceMap.OrderNo"/>
                        <if condition="response?.header?.invokehttp?.java?.exception?.class">
                            <set field="response_txt_en" from="response.header.invokehttp.java.exception.message"/>
                            <set field="statusCode_txt_en" value="408"/>
                            <set field="status_txt_en" value="failed"/>
                            <else>
                                <set field="response_txt_en" from="response.message"/>
                                <set field="statusCode_txt_en" value="200"/>
                                <set field="status_txt_en" value="success"/>
                            </else>
                        </if>
                        <set field="data" from="[
                            docType : docType,
                            _ttl_ : _ttl_,
                            id : id,
                            status_txt_en : status_txt_en,
                            request_txt_en : request_txt_en,
                            statusCode_txt_en : statusCode_txt_en,
                            response_txt_en : response_txt_en,
                            primaryEntity_txt_en : primaryEntity_txt_en,
                            primaryField_txt_en : primaryField_txt_en,
                            comment : comment,
                            createdDate : response.createdDate]"/>
                        <set field="solrpayload" from="[
                            coreName : coreName,
                            data : [data]
                        ]"/>
                        <service-call name="retailpro.ExternalApiCall.post#SolrOrderIndex" in-map="[orderPayload : solrpayload]"/>
                    </else>
                </if>
            </iterate>

        </actions>

    </service>

</services>